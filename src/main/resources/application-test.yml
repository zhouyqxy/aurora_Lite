# 测试/生产
server:
  port: 8090

#默认数据源
spring:
  datasource:
    url: jdbc:sqlite:sqlite/data.db
    username:
    password:
    driver-class-name: org.sqlite.JDBC
    type: com.alibaba.druid.pool.DruidDataSource
    # druid相关配置
    druid:
      # 连接池初始化大小
      initial-size: 8
      # 最大活跃连接数
      max-active: 20
      # 最小空闲连接数
      min-idle: 1
      # 获取连接等待超时的时间
      max-wait: 60000
      # 间隔多久才进行一次检测，检测需要关闭的空闲连接，ms
      time-between-eviction-runs-millis: 60000
      validation-query: select 'x'
      # 配置过滤器，https://github.com/alibaba/druid/wiki/%E5%86%85%E7%BD%AEFilter%E7%9A%84%E5%88%AB%E5%90%8D
      filters: stat,slf4j,config

  mail:
    host: smtp.exmail.qq.com
    username: jonk@jonk.top
    password: xxxxx
    default-encoding: UTF-8
    protocol: smtp
    port: 465
    properties:
      mail:
        smtp:
          auth: true
          socketFactory:
            class: javax.net.ssl.SSLSocketFactory
            port: 465
          ssl:
            enable: true
          starttls:
            enable: true
            required: true
  servlet:
    multipart:
      max-file-size: 10MB
      max-request-size: 10MB

mybatis-plus:
  mapper-locations: classpath:mapper/*.xml
  configuration:
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
    map-underscore-to-camel-case: true


search:
  mode: mysql

upload:
  mode: local
  local:
    url: https://blog.jonk.top/file/
    dir: /var/data/blog/

website:
  url: https://blog.jonk.top

qq:
  app-id: xxxx
  check-token-url: https://graph.qq.com/oauth2.0/me?access_token={access_token}
  user-info-url: https://graph.qq.com/user/get_user_info?openid={openid}&access_token={access_token}&oauth_consumer_key={oauth_consumer_key}
logging:
  level:
    cn.jay.repository: info
  config: classpath:log4j2-test.xml


